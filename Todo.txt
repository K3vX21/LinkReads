app
[] cache data fetches
[] improve text overflow handling (https://stackoverflow.com/questions/31928710/text-overflow-ellipsis-on-dynamic-width-element)
[] fix bug where dashboard isn't landing page when not logged in
[] reimplement image replacement (instead of upserting, delete and upload)
[] move supabase queries to services directory https://github.com/search?q=repo%3Aharshmangalam%2Fsupabook%20fetchProfileDetails&type=code
[] how to improve speed?
  [] reduce size of first loads on javascript
  [] make things server components?
[] add main element (with flex styling) to layout
[] TODO: How to get session user in client components?
[] Email notifications about friends' activities
[] why isn't avatar image being fetched?
====
Feed
[] add avatar
[] center text for empty feed

Profile Page
[] refactor component structure into files ([Page, Profile Card (Profile Details)(Followers)(Following), Save View])
ReadingList
[] limit rendering of elements 
- https://react.dev/reference/react/memo: "Keep in mind that memo is completely useless if the props passed to your component are always different, such as if you pass an object or a plain function defined during rendering."

listItem
[] create undo popup on done/delete
[] show created or read conditionally

Searchbar
[] create popup for invalid url structure
[] optimistically update new saves

Navbar
[] live update avatar when pfp is changed in 'edit profile' modal

404 Page
[] create page 

User DNE Page
[] handle for when /[id] DNE

login
[] utilize google's single-tap flow: https://supabase.com/docs/guides/auth/social-login/auth-google#using-the-oauth-flow-for-web

Import/Export
URL, Date Read

Chrome extension
[] right click page -> menu -> add page to LinkReads and mark as read
[] snooze for time

saves
[] add ratings
[] add notes
[] add comments

Landing Page
[] imporve copy
[] create big image cards that show dashboard and link view (e.g. https://www.notion.so/productL)

feed
[] show your own activity

DELETE LATER:
submit url
parse url
upsert links table (just the url)
insert saves table (returning dataSaves)
call fetchTitle(dataSaves)
update setListSaves